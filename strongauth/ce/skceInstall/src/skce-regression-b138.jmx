<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="SKCE Hostnames" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SKCE01" elementType="Argument">
            <stringProp name="Argument.name">SKCE01</stringProp>
            <stringProp name="Argument.value">saka208.strongauth.com:8181</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="SKEE Users, Groups, and Passwords (Use for AD + OAM)" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ldaptype" elementType="Argument">
            <stringProp name="Argument.name">ldaptype</stringProp>
            <stringProp name="Argument.value">OAM</stringProp>
            <stringProp name="Argument.desc">OAM (uses UserDNs) or LDAP (users Usernames)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Svcuser" elementType="Argument">
            <stringProp name="Argument.name">Svcuser</stringProp>
            <stringProp name="Argument.value">T_TEC_A_KMS_LDAP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Service Account</stringProp>
          </elementProp>
          <elementProp name="Svcpassword" elementType="Argument">
            <stringProp name="Argument.name">Svcpassword</stringProp>
            <stringProp name="Argument.value">Abcd1234!</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Service Account Password</stringProp>
          </elementProp>
          <elementProp name="Pinguser" elementType="Argument">
            <stringProp name="Argument.name">Pinguser</stringProp>
            <stringProp name="Argument.value">skceping</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Service Account with Ping privilege</stringProp>
          </elementProp>
          <elementProp name="User1" elementType="Argument">
            <stringProp name="Argument.name">User1</stringProp>
            <stringProp name="Argument.value">DEChan\\\\, Brooke</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">User, belongs to Validgroup1</stringProp>
          </elementProp>
          <elementProp name="UserDN1" elementType="Argument">
            <stringProp name="Argument.name">UserDN1</stringProp>
            <stringProp name="Argument.value">cn=DEChan\\\\, Brooke,OU=escb,OU=users,OU=IAM,DC=eds,DC=escb,DC=eu</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">UserDN, belongs to Validgroup1</stringProp>
          </elementProp>
          <elementProp name="User2" elementType="Argument">
            <stringProp name="Argument.name">User2</stringProp>
            <stringProp name="Argument.value">ESAndvik\\\\, Kaare</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">User, belongs to Validgroup2</stringProp>
          </elementProp>
          <elementProp name="UserDN2" elementType="Argument">
            <stringProp name="Argument.name">UserDN2</stringProp>
            <stringProp name="Argument.value">cn=ESAndvik\\\\, Kaare,OU=escb,OU=users,OU=IAM,DC=eds,DC=escb,DC=eu</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">UserDN, belongs to Validgroup2</stringProp>
          </elementProp>
          <elementProp name="User3" elementType="Argument">
            <stringProp name="Argument.name">User3</stringProp>
            <stringProp name="Argument.value">FRHull\\\\, Kalle</stringProp>
            <stringProp name="Argument.desc">User, belongs to Validgroup1 and Validgroup2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="UserDN3" elementType="Argument">
            <stringProp name="Argument.name">UserDN3</stringProp>
            <stringProp name="Argument.value">cn=FRHull\\\\, Kalle,OU=escb,OU=users,OU=IAM,DC=eds,DC=escb,DC=eu</stringProp>
            <stringProp name="Argument.desc">UserDN, belongs to Validgroup1 and Validgroup2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Validgroup1" elementType="Argument">
            <stringProp name="Argument.name">Validgroup1</stringProp>
            <stringProp name="Argument.value">APPR_KMS_ESCB-Secret-Clearance</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Group with members User1 and User3</stringProp>
          </elementProp>
          <elementProp name="Validgroup2" elementType="Argument">
            <stringProp name="Argument.name">Validgroup2</stringProp>
            <stringProp name="Argument.value">APPR_KMS_BDF-Secret-Clearance</stringProp>
            <stringProp name="Argument.desc">Group with members User2 and User3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DID" elementType="Argument">
            <stringProp name="Argument.name">DID</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">DID for the SAKA</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="SKEE Users, Groups, and Passwords (Use for OpenDJ LDAP)" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ldaptype" elementType="Argument">
            <stringProp name="Argument.name">ldaptype</stringProp>
            <stringProp name="Argument.value">LDAP</stringProp>
            <stringProp name="Argument.desc">OAM (uses UserDNs) or LDAP (users Usernames)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Svcuser" elementType="Argument">
            <stringProp name="Argument.name">Svcuser</stringProp>
            <stringProp name="Argument.value">service-cc-ce</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Service Account</stringProp>
          </elementProp>
          <elementProp name="Svcpassword" elementType="Argument">
            <stringProp name="Argument.name">Svcpassword</stringProp>
            <stringProp name="Argument.value">Abcd1234!#</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Service Account Password</stringProp>
          </elementProp>
          <elementProp name="Pinguser" elementType="Argument">
            <stringProp name="Argument.name">Pinguser</stringProp>
            <stringProp name="Argument.value">skceping</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Service Account with Ping privilege</stringProp>
          </elementProp>
          <elementProp name="User1" elementType="Argument">
            <stringProp name="Argument.name">User1</stringProp>
            <stringProp name="Argument.value">encryptonly</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">User, belongs to Validgroup1</stringProp>
          </elementProp>
          <elementProp name="UserDN1" elementType="Argument">
            <stringProp name="Argument.name">UserDN1</stringProp>
            <stringProp name="Argument.value">cn=encryptonly,did=2,ou=users,ou=v2,ou=SKCE,ou=StrongAuth,ou=Applications,dc=strongauth,dc=com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">UserDN, belongs to Validgroup1</stringProp>
          </elementProp>
          <elementProp name="User2" elementType="Argument">
            <stringProp name="Argument.name">User2</stringProp>
            <stringProp name="Argument.value">decryptonly</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">User, belongs to Validgroup2</stringProp>
          </elementProp>
          <elementProp name="UserDN2" elementType="Argument">
            <stringProp name="Argument.name">UserDN2</stringProp>
            <stringProp name="Argument.value">cn=decryptonly,did=2,ou=users,ou=v2,ou=SKCE,ou=StrongAuth,ou=Applications,dc=strongauth,dc=com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">UserDN, belongs to Validgroup2</stringProp>
          </elementProp>
          <elementProp name="User3" elementType="Argument">
            <stringProp name="Argument.name">User3</stringProp>
            <stringProp name="Argument.value">encryptdecrypt</stringProp>
            <stringProp name="Argument.desc">User, belongs to Validgroup1 and Validgroup2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="UserDN3" elementType="Argument">
            <stringProp name="Argument.name">UserDN3</stringProp>
            <stringProp name="Argument.value">cn=encryptdecrypt,did=2,ou=users,ou=v2,ou=SKCE,ou=StrongAuth,ou=Applications,dc=strongauth,dc=com</stringProp>
            <stringProp name="Argument.desc">UserDN, belongs to Validgroup1 and Validgroup2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Validgroup1" elementType="Argument">
            <stringProp name="Argument.name">Validgroup1</stringProp>
            <stringProp name="Argument.value">cn=EncryptionAuthorized,did=2,ou=groups,ou=v2,ou=SKCE,ou=StrongAuth,ou=Applications,dc=strongauth,dc=com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Group with members User1 and User3</stringProp>
          </elementProp>
          <elementProp name="Validgroup2" elementType="Argument">
            <stringProp name="Argument.name">Validgroup2</stringProp>
            <stringProp name="Argument.value">cn=DecryptionAuthorized,did=2,ou=groups,ou=v2,ou=SKCE,ou=StrongAuth,ou=Applications,dc=strongauth,dc=com</stringProp>
            <stringProp name="Argument.desc">Group with members User2 and User3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DID" elementType="Argument">
            <stringProp name="Argument.name">DID</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">DID for the SAKA</stringProp>
          </elementProp>
          <elementProp name="testusername_too_long" elementType="Argument">
            <stringProp name="Argument.name">testusername_too_long</stringProp>
            <stringProp name="Argument.value">ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz0123456789&quot;                                     + &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz0123456789&quot;                                     + &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz0123456789&quot;                                     + &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz0123456789</stringProp>
            <stringProp name="Argument.desc">Too long username for any test like LDAP / AD / FIDO</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="testusername_special_characters" elementType="Argument">
            <stringProp name="Argument.name">testusername_special_characters</stringProp>
            <stringProp name="Argument.value">@#$%^&amp;*(*&amp;^%$#@!#$%^&amp;*(*&amp;^%$#@</stringProp>
            <stringProp name="Argument.desc">username parameter with special characters</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="test_ldap_attribute_key" elementType="Argument">
            <stringProp name="Argument.name">test_ldap_attribute_key</stringProp>
            <stringProp name="Argument.value">description</stringProp>
            <stringProp name="Argument.desc">ldap attribute used for testing - key</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="test_ldap_attribute_value" elementType="Argument">
            <stringProp name="Argument.name">test_ldap_attribute_value</stringProp>
            <stringProp name="Argument.value">Description changed by jmeter test</stringProp>
            <stringProp name="Argument.desc">ldap attribute used for testing - value for the key mentioned above</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Pinguserpassword" elementType="Argument">
            <stringProp name="Argument.name">Pinguserpassword</stringProp>
            <stringProp name="Argument.value">Abcd1234!</stringProp>
            <stringProp name="Argument.desc">Service Account with Ping privilege</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="SKEE Files for test" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="file_path" elementType="Argument">
            <stringProp name="Argument.name">file_path</stringProp>
            <stringProp name="Argument.value">/misc/tmp/skce/jmeter-test-files</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file1" elementType="Argument">
            <stringProp name="Argument.name">file1</stringProp>
            <stringProp name="Argument.value">hello.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">6b</stringProp>
          </elementProp>
          <elementProp name="file2" elementType="Argument">
            <stringProp name="Argument.name">file2</stringProp>
            <stringProp name="Argument.value">hexdumper.sh</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">44b</stringProp>
          </elementProp>
          <elementProp name="file3" elementType="Argument">
            <stringProp name="Argument.name">file3</stringProp>
            <stringProp name="Argument.value">lock-tables.sql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">950b</stringProp>
          </elementProp>
          <elementProp name="file4" elementType="Argument">
            <stringProp name="Argument.name">file4</stringProp>
            <stringProp name="Argument.value">RSARootCA.cacert.pem</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">1.9Kb</stringProp>
          </elementProp>
          <elementProp name="file5" elementType="Argument">
            <stringProp name="Argument.name">file5</stringProp>
            <stringProp name="Argument.value">comparison.png</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">8.9Kb</stringProp>
          </elementProp>
          <elementProp name="file6" elementType="Argument">
            <stringProp name="Argument.name">file6</stringProp>
            <stringProp name="Argument.value">Authorization-v1.odt</stringProp>
            <stringProp name="Argument.desc">17Kb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file7" elementType="Argument">
            <stringProp name="Argument.name">file7</stringProp>
            <stringProp name="Argument.value">domain.xml</stringProp>
            <stringProp name="Argument.desc">25Kb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file8" elementType="Argument">
            <stringProp name="Argument.name">file8</stringProp>
            <stringProp name="Argument.value">Expense_Report_template.xls</stringProp>
            <stringProp name="Argument.desc">30Kb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file9" elementType="Argument">
            <stringProp name="Argument.name">file9</stringProp>
            <stringProp name="Argument.value">YellowToken.jpg</stringProp>
            <stringProp name="Argument.desc">277Kb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file10" elementType="Argument">
            <stringProp name="Argument.name">file10</stringProp>
            <stringProp name="Argument.value">CPS-template.doc</stringProp>
            <stringProp name="Argument.desc">415Kb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file11" elementType="Argument">
            <stringProp name="Argument.name">file11</stringProp>
            <stringProp name="Argument.value">SKCEApplet.war</stringProp>
            <stringProp name="Argument.desc">3Mb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file12" elementType="Argument">
            <stringProp name="Argument.name">file12</stringProp>
            <stringProp name="Argument.value">SAKA-2.0-Reference.pdf</stringProp>
            <stringProp name="Argument.desc">10Mb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file13" elementType="Argument">
            <stringProp name="Argument.name">file13</stringProp>
            <stringProp name="Argument.value">skce2.0.zip</stringProp>
            <stringProp name="Argument.desc">26Mb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file14" elementType="Argument">
            <stringProp name="Argument.name">file14</stringProp>
            <stringProp name="Argument.value">1mil.db</stringProp>
            <stringProp name="Argument.desc">189Mb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file15" elementType="Argument">
            <stringProp name="Argument.name">file15</stringProp>
            <stringProp name="Argument.value">skcewithskcc.ova</stringProp>
            <stringProp name="Argument.desc">597Mb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file16" elementType="Argument">
            <stringProp name="Argument.name">file16</stringProp>
            <stringProp name="Argument.value">pkiclient.ova</stringProp>
            <stringProp name="Argument.desc">820Mb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="file17" elementType="Argument">
            <stringProp name="Argument.name">file17</stringProp>
            <stringProp name="Argument.value">test.bin</stringProp>
            <stringProp name="Argument.desc">1Gb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="testfile1" elementType="Argument">
            <stringProp name="Argument.name">testfile1</stringProp>
            <stringProp name="Argument.value">brokensignature.zenc</stringProp>
            <stringProp name="Argument.desc">For Negative Tests</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="testfile2" elementType="Argument">
            <stringProp name="Argument.name">testfile2</stringProp>
            <stringProp name="Argument.value">red-blue-white-strongauth-logo.eps.zenc</stringProp>
            <stringProp name="Argument.desc">For Negative Tests</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="SKFE Configuration" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="skfe-did" elementType="Argument">
            <stringProp name="Argument.name">skfe-did</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="skfe-serviceuser" elementType="Argument">
            <stringProp name="Argument.name">skfe-serviceuser</stringProp>
            <stringProp name="Argument.value">svcfidouser</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="skfe-serviceuserpwd" elementType="Argument">
            <stringProp name="Argument.name">skfe-serviceuserpwd</stringProp>
            <stringProp name="Argument.value">Abcd1234!#</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="skfe-fiodprotocol" elementType="Argument">
            <stringProp name="Argument.name">skfe-fiodprotocol</stringProp>
            <stringProp name="Argument.value">U2F_V2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="skfe-testusername" elementType="Argument">
            <stringProp name="Argument.name">skfe-testusername</stringProp>
            <stringProp name="Argument.value">encryptdecrypt3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="reg_metadata" elementType="Argument">
            <stringProp name="Argument.name">reg_metadata</stringProp>
            <stringProp name="Argument.value">{&quot;version&quot;:&quot;1.0&quot;,&quot;create_location&quot;:&quot;Sunnyvale, CA&quot;}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth_metadata" elementType="Argument">
            <stringProp name="Argument.name">auth_metadata</stringProp>
            <stringProp name="Argument.value">{&quot;version&quot;:&quot;1.0&quot;,&quot;last_used_location&quot;:&quot;Sunnyvale, CA&quot;}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="change_metadata" elementType="Argument">
            <stringProp name="Argument.name">change_metadata</stringProp>
            <stringProp name="Argument.value">{&quot;version&quot;:&quot;1.0&quot;,&quot;last_used_location&quot;:&quot;Sunnyvale, CA&quot;}	</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="origin" elementType="Argument">
            <stringProp name="Argument.name">origin</stringProp>
            <stringProp name="Argument.value">https://saka208.strongauth.com:8181</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SKEE Positive Tests" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1449164120000</longProp>
        <longProp name="ThreadGroup.end_time">1449164120000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Timer and Response Time Information" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="Delay" elementType="Argument">
              <stringProp name="Argument.name">Delay</stringProp>
              <stringProp name="Argument.value">10000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Amount of time between Encryption and Decryption, in milliseconds</stringProp>
            </elementProp>
            <elementProp name="ResponseTime" elementType="Argument">
              <stringProp name="Argument.name">ResponseTime</stringProp>
              <stringProp name="Argument.value">5000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Amount of time allowed before Failure, in milliseconds</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SKEE - Encrypt and Decrypt - File Sizes + Reponse Time + Data Integrity" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File2" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 40 bytes - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
                <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
              </DurationAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 40 bytes - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
                <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
              </DurationAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File3" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 1 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 1 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File4" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file4}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file4}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 2 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 2 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File5" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file5}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file5}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 10 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 10 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File6" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file6}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file6}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 20 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 20 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File7" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file7}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file7}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 25 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 25 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File8" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file8}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file8}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 30 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 30 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File9" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file9}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file9}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 300 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 300 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File10" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file10}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file10}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 500 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 500 kb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File11" enabled="false">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file11}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file11}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 3 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 3 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File12" enabled="false">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file12}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file12}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 10 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 10 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File13" enabled="false">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file13}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file13}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 30 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 30 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File14" enabled="false">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file14}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file14}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 200 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 200 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File15" enabled="false">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file15}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file15}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 600 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 600 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File16" enabled="false">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file16}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file16}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 800 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 800 mb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="SKEE - Encrypt and Decrypt - File17" enabled="false">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedFile" elementType="Argument">
                  <stringProp name="Argument.name">selectedFile</stringProp>
                  <stringProp name="Argument.value">${file17}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filePath" elementType="Argument">
                  <stringProp name="Argument.name">filePath</stringProp>
                  <stringProp name="Argument.value">${file_path}/${file17}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - 1 gb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${filePath}&quot;, 
                         &quot;${selectedFile}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - 1 gb - ${selectedFile}" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${selectedFile}.zenc&quot;, 
                         &quot;${selectedFile}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${selectedFile}&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202516509">Success</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SKEE - Encrypt and Decrypt - Group Privileges" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Encrypt Two Groups" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);
inputList.add(&quot;${Validgroup2}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file2}&quot;, 
                         &quot;${file2}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN3}&quot;, 
                         &quot;${User3}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${file2}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Decrypt From Group A" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Decrypt From Group B" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN2}&quot;, 
                         &quot;${User2}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SKEE - Encrypt - Algorithms; Unique and Non-unique Keys" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - AES256 Uniquekey=true" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file2}&quot;, 
                         &quot;${file2}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${file2}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - AES256 Uniquekey=true" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - AES192 Uniquekey=true" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file2}&quot;, 
                         &quot;${file2}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${file2}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - AES192 Uniquekey=true" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - AES128 Uniquekey=true" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file2}&quot;, 
                         &quot;${file2}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         128, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${file2}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - AES128 Uniquekey=true" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - DESede168 Uniquekey=true" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file2}&quot;, 
                         &quot;${file2}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;DESede&quot;, 
                         168, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${file2}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - DESede168 Uniquekey=true" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - DESede112 Uniquekey=true" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file2}&quot;, 
                         &quot;${file2}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;DESede&quot;, 
                         112, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${file2}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - DESede112 Uniquekey=true" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - AES256 Uniquekey=false" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file2}&quot;, 
                         &quot;${file2}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         false, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${file2}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - AES256 Uniquekey=false" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - AES192 Uniquekey=false" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file2}&quot;, 
                         &quot;${file2}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         false, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${file2}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - AES192 Uniquekey=false" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - AES128 Uniquekey=false" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file2}&quot;, 
                         &quot;${file2}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         false, 
                         &quot;AES&quot;, 
                         128, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${file2}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - AES128 Uniquekey=false" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - DESede168 Uniquekey=false" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file2}&quot;, 
                         &quot;${file2}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         false, 
                         &quot;DESede&quot;, 
                         168, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${file2}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - DESede168 Uniquekey=false" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - DESede112 Uniquekey=false" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file2}&quot;, 
                         &quot;${file2}&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         false, 
                         &quot;DESede&quot;, 
                         112, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/${file2}.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - DESede112 Uniquekey=false" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/${file2}.zenc&quot;, 
                         &quot;${file2}&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="false">
              <stringProp name="DurationAssertion.duration">${ResponseTime}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${Delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKCE - Ping" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skee/SKEEServlet?wsdl</stringProp>
          <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ske=&quot;http://skeews.strongauth.com/&quot; xmlns:skc=&quot;http://xml.strongauth.com/schema/SKCEXMLSchema&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ske:ping&gt;
         &lt;svcinfo&gt;
            &lt;skc:did&gt;${DID}&lt;/skc:did&gt;
            &lt;skc:svcusername&gt;${Pinguser}&lt;/skc:svcusername&gt;
            &lt;skc:svcpassword&gt;${Svcpassword}&lt;/skc:svcpassword&gt;
         &lt;/svcinfo&gt;
      &lt;/ske:ping&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
          <stringProp name="SoapSampler.xml_data_file"></stringProp>
          <stringProp name="SoapSampler.SOAP_ACTION">ping</stringProp>
          <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </SoapSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="578063204">Failed!</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2077132495">Successfully decrypted encryption output</stringProp>
              <stringProp name="314762443">Successfully encrypted /usr/local/strongauth/skce/etc/abc.txt</stringProp>
              <stringProp name="1259833018">Successful</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SKEE Negative Tests" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1389808766000</longProp>
        <longProp name="ThreadGroup.end_time">1389808766000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SKEE - Encrypt Webservice Tests" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input DataHandler - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(null,
                         &quot;hello.txt&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input DataHandler - Too Small" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file1}&quot;, 
                         &quot;hello.txt&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831192">SKCEWS-ERR-3051</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         null,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Empty" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831039">SKCEWS-ERR-3003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Too Long" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831193">SKCEWS-ERR-3052</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831039">SKCEWS-ERR-3003</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot; .pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831039">SKCEWS-ERR-3003</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;!.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0,
                         null, 
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;@.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;#.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;$.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;%.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;^.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;*.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;(.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;).pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;=.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;+.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;zenc/.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;zenc\&quot;.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;file.pdf&apos;&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;zenc/&gt;.pdf&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input DID - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         null, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input DID - Non Existant" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;125&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259533">SKCE-ERR-1092</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Svcusername - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         null, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Svcusername - Empty" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Svcusername - Non-Existant" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;NotAValidUser&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse().toString() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Svcpassword - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         null,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Svcpassword - Empty" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Svcpassword - Incorrect" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;asdbafe21354236&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Algorithm - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         null, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Algorithm - Empty" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831070">SKCEWS-ERR-3013</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Algorithm - Unsupported" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;DES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831070">SKCEWS-ERR-3013</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input KeySize - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         null, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input KeySize - Negative" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         -256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831070">SKCEWS-ERR-3013</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input KeySize - Zero" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         0, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831070">SKCEWS-ERR-3013</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input KeySize - Unsupported AES112" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         112, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831070">SKCEWS-ERR-3013</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input KeySize - Unsupported AES168" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         168, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831070">SKCEWS-ERR-3013</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input KeySize - Unsupported DESede128" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;DESede&quot;, 
                         128, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831070">SKCEWS-ERR-3013</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input KeySize - Unsupported DESede192" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;DESede&quot;, 
                         192, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831070">SKCEWS-ERR-3013</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input KeySize - Unsupported DESede256" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;DESede&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831070">SKCEWS-ERR-3013</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="SKEE Encrypt - Auth Source OAM" enabled="true">
            <stringProp name="IfController.condition">&quot;${ldaptype}&quot;==&quot;OAM&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input UserDN - Null" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         null, 
                         null, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input UserDN - Empty" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;&quot;, 
                         null, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input UserDN - Non Existant" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;cn=notauser,dc=strongauth,dc=com&quot;, 
                         null, 
                         inputList, 
                         0,
                         null, 
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831191">SKCEWS-ERR-3050</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Authgroups - Null" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         null, 
                         null, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Authgroups - Empty" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         null, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831191">SKCEWS-ERR-3050</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Authgroups - Non Existant" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;notavalidgroup&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         null, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831191">SKCEWS-ERR-3050</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Authgroups - Partial Group Membership" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);
inputList.add(&quot;${Validgroup2}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         null, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831191">SKCEWS-ERR-3050</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="SKEE Encrypt - Auth Source LDAP" enabled="true">
            <stringProp name="IfController.condition">&quot;${ldaptype}&quot;==&quot;LDAP&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Username - Null" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         null, 
                         null, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Username - Empty" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         null, 
                         &quot;&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Username - Non Existant" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         null, 
                         &quot;notauser&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831169">SKCEWS-ERR-3049</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Authgroups - Null" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         null, 
                         &quot;${User1}&quot;, 
                         null, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Authgroups - Empty" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         null, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Authgroups - Non Existant" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;notavalidgroup&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         null, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831191">SKCEWS-ERR-3050</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Input Authgroups - Partial Group Membership" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);
inputList.add(&quot;${Validgroup2}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;domain.xml&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         null, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831191">SKCEWS-ERR-3050</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SKEE - Decrypt Webservice Tests" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Encrypt - Successful Encryption" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

List inputList = new ArrayList();
inputList.add(&quot;${Validgroup1}&quot;);

retObject s = ee.encrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;decryptiontest&quot;,
                         null,
                         null,
                         &quot;${DID}&quot;, 
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         true, 
                         &quot;AES&quot;, 
                         256, 
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;, 
                         inputList, 
                         0, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );

if ( s.getResponse().equals(&quot;Success&quot;) ) {
     StreamingDataHandler sdh = (StreamingDataHandler) s.getOutDataHandler();
     File file = new File(&quot;/tmp/decryptiontest.zenc&quot;);
     sdh.moveTo(file);
     sdh.close(); 
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input DataHandler - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(null, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input DataHandler - Garbage" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831036">SKCEWS-ERR-3000</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input DataHandler - Random Zipfile" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;${file_path}/${file13}&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182170377">SKCE-ERR-4022</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input DataHandler - Invalid Signature" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;${file_path}/${testfile1}&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182224251">SKCE-ERR-2606</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input DataHandler - Missing Signature" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;${file_path}/${testfile2}&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182224253">SKCE-ERR-2604</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         null,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Empty" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831039">SKCEWS-ERR-3003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Too Long" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831193">SKCEWS-ERR-3052</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831039">SKCEWS-ERR-3003</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot; .zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831039">SKCEWS-ERR-3003</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;!.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;@.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;#.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;$.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;%.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;^.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;&amp;.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;*.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;(.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;).zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;=.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;+.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;pdf/.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;pdf\&quot;.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;file.zenc&apos;&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Filename - Contains Forbidden Character" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;pdf/&gt;.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input DID - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         null,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input DID - Non Existant" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;${file_path}/${file7}&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;125&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259533">SKCE-ERR-1092</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Svcusername - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         null, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Svcusername - Empty" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Svcusername - Non Existant" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;notauser&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Svcpassword - Null" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         null,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Svcpassword - Empty" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Svcpassword - Incorrect" enabled="true">
            <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.pdf.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;raloinevalinuvrnoi4398na4w9n234&quot;,
                         &quot;${UserDN1}&quot;, 
                         &quot;${User1}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="SKEE Decrypt - Auth Source LDAP" enabled="true">
            <stringProp name="IfController.condition">&quot;${ldaptype}&quot;==&quot;LDAP&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Username - Null" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         null, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Username - Empty" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         null, 
                         &quot;&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Username - Non Existant" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         null, 
                         &quot;notauser&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831036">SKCEWS-ERR-3000</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input Username - Unauthorized" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         null, 
                         &quot;${User2}&quot;,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831036">SKCEWS-ERR-3000</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="SKEE Decrypt - Auth Source OAM" enabled="true">
            <stringProp name="IfController.condition">&quot;${ldaptype}&quot;==&quot;OAM&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input UserDN - Null" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         null, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input UserDN - Empty" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;&quot;, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input UserDN - Non Existant" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;cn=notauser,dc=strongauth,dc=com&quot;, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831036">SKCEWS-ERR-3000</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SKEE Decrypt - Input UserDN - Unauthorized" enabled="true">
              <stringProp name="BeanShellSampler.query">import Main.EncryptionEngine;
import Main.retObject;
import java.io.File;
import org.jvnet.staxex.StreamingDataHandler;

EncryptionEngine ee = new EncryptionEngine(&quot;https://${SKCE01}&quot;);

retObject s = ee.decrypt(&quot;/tmp/decryptiontest.zenc&quot;, 
                         &quot;Filename.zenc&quot;,
                         &quot;${DID}&quot;,
                         &quot;${Svcuser}&quot;, 
                         &quot;${Svcpassword}&quot;,
                         &quot;${UserDN2}&quot;, 
                         null,
                         null);

SampleResult.setResponseData( s.getResponse() );
SampleResult.setDataType( org.apache.jmeter.samplers.SampleResult.TEXT );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="717831036">SKCEWS-ERR-3000</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SKEE - Ping Webservice Tests" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKEE Ping - Input Svcusername - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skee/SKEEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ske=&quot;http://skeews.strongauth.com/&quot; xmlns:skc=&quot;http://xml.strongauth.com/schema/SKCEXMLSchema&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ske:ping&gt;
         &lt;svcinfo&gt;
            &lt;skc:did&gt;${DID}&lt;/skc:did&gt;
            &lt;skc:svcpassword&gt;${Svcpassword}&lt;/skc:svcpassword&gt;
         &lt;/svcinfo&gt;
      &lt;/ske:ping&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">ping</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKEE Ping - Input Svcusername - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skee/SKEEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ske=&quot;http://skeews.strongauth.com/&quot; xmlns:skc=&quot;http://xml.strongauth.com/schema/SKCEXMLSchema&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ske:ping&gt;
         &lt;svcinfo&gt;
            &lt;skc:did&gt;${DID}&lt;/skc:did&gt;
            &lt;skc:svcusername&gt;&lt;/skc:svcusername&gt;
            &lt;skc:svcpassword&gt;${Svcpassword}&lt;/skc:svcpassword&gt;
         &lt;/svcinfo&gt;
      &lt;/ske:ping&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">ping</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKEE Ping - Input Svcusername - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skee/SKEEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ske=&quot;http://skeews.strongauth.com/&quot; xmlns:skc=&quot;http://xml.strongauth.com/schema/SKCEXMLSchema&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ske:ping&gt;
         &lt;svcinfo&gt;
            &lt;skc:did&gt;${DID}&lt;/skc:did&gt;
            &lt;skc:svcusername&gt;Notauser&lt;/skc:svcusername&gt;
            &lt;skc:svcpassword&gt;${Svcpassword}&lt;/skc:svcpassword&gt;
         &lt;/svcinfo&gt;
      &lt;/ske:ping&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">ping</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKEE Ping - Input Svcpassword - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skee/SKEEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ske=&quot;http://skeews.strongauth.com/&quot; xmlns:skc=&quot;http://xml.strongauth.com/schema/SKCEXMLSchema&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ske:ping&gt;
         &lt;svcinfo&gt;
            &lt;skc:did&gt;${DID}&lt;/skc:did&gt;
            &lt;skc:svcusername&gt;${Pinguser}&lt;/skc:svcusername&gt;
         &lt;/svcinfo&gt;
      &lt;/ske:ping&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">ping</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831071">SKCEWS-ERR-3014</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKEE Ping - Input Svcpassword - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skee/SKEEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ske=&quot;http://skeews.strongauth.com/&quot; xmlns:skc=&quot;http://xml.strongauth.com/schema/SKCEXMLSchema&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ske:ping&gt;
         &lt;svcinfo&gt;
            &lt;skc:did&gt;${DID}&lt;/skc:did&gt;
            &lt;skc:svcusername&gt;${Pinguser}&lt;/skc:svcusername&gt;
            &lt;skc:svcpassword&gt;&lt;/skc:svcpassword&gt;
         &lt;/svcinfo&gt;
      &lt;/ske:ping&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">ping</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831194">SKCEWS-ERR-3053</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKEE Ping - Input Svcpassword - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skee/SKEEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ske=&quot;http://skeews.strongauth.com/&quot; xmlns:skc=&quot;http://xml.strongauth.com/schema/SKCEXMLSchema&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ske:ping&gt;
         &lt;svcinfo&gt;
            &lt;skc:did&gt;${DID}&lt;/skc:did&gt;
            &lt;skc:svcusername&gt;${Pinguser}&lt;/skc:svcusername&gt;
            &lt;skc:svcpassword&gt;dfghytrewqwerty&lt;/skc:svcpassword&gt;
         &lt;/svcinfo&gt;
      &lt;/ske:ping&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">ping</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKEE Ping - Input DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skee/SKEEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ske=&quot;http://skeews.strongauth.com/&quot; xmlns:skc=&quot;http://xml.strongauth.com/schema/SKCEXMLSchema&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ske:ping&gt;
         &lt;svcinfo&gt;
            &lt;skc:svcusername&gt;${Pinguser}&lt;/skc:svcusername&gt;
            &lt;skc:svcpassword&gt;${Svcpassword}&lt;/skc:svcpassword&gt;
         &lt;/svcinfo&gt;
      &lt;/ske:ping&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">ping</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKEE Ping - Input DID - Not Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skee/SKEEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ske=&quot;http://skeews.strongauth.com/&quot; xmlns:skc=&quot;http://xml.strongauth.com/schema/SKCEXMLSchema&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ske:ping&gt;
         &lt;svcinfo&gt;
            &lt;skc:did&gt;125&lt;/skc:did&gt;
            &lt;skc:svcusername&gt;${Pinguser}&lt;/skc:svcusername&gt;
            &lt;skc:svcpassword&gt;${Svcpassword}&lt;/skc:svcpassword&gt;
         &lt;/svcinfo&gt;
      &lt;/ske:ping&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">ping</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259533">SKCE-ERR-1092</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SKFE Positive Tests" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1449169611000</longProp>
        <longProp name="ThreadGroup.end_time">1449169611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Registration" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE - Preregistration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
         &lt;svcinfo&gt;
            &lt;did&gt;${skfe-did}&lt;/did&gt;
            &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
            &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
            &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
         &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${testuser}&quot;}&lt;/payload&gt;
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1145792675">testuser</stringProp>
                <stringProp name="-1159834508">testuser1</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-318658153">
                  <stringProp name="-566583462">testuser_${__Random(1,1000000)}${__Random(1,1000000)}</stringProp>
                  <stringProp name="-1139092054">encryptdecrypt2</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preregistration" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE - Registration" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
         &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
        &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${reg_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt; </stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1720306205">Successfully processed registration response</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Registration Token Simulation" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;
String SessionID = &quot;${sessionId}&quot;;
String origin = &quot;${origin}&quot;;
String TokenResponse = FIDOU2FTokenSimulator.generateRegistrationResponse(ChallengeJson,origin,SessionID,true).toString();
vars.put(&quot;challengeresponse&quot;,TokenResponse);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Registration-for negative test" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE - Preregistration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
         &lt;svcinfo&gt;
            &lt;did&gt;${skfe-did}&lt;/did&gt;
            &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
            &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
            &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
         &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt;
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="false">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1145792675">testuser</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1807926422">
                  <stringProp name="-566583462">testuser_${__Random(1,1000000)}${__Random(1,1000000)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preregistration" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE - Registration" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;

         &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${reg_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt; </stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1720306205">Successfully processed registration response</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Registration Token Simulation" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;
String SessionID = &quot;${sessionId}&quot;;
String origin = &quot;${origin}&quot;;
String TokenResponse = FIDOU2FTokenSimulator.generateRegistrationResponse(ChallengeJson,origin,SessionID,true).toString();
vars.put(&quot;challengeresponse&quot;,TokenResponse);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Authentication" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE - Preauthentication" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
	&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${testuser}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="KeyHandle Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">keyHandle</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;keyHandle&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preauthentication" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE - Authentication" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
	&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
	&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${auth_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-327459175">Successfully processed sign response</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Authentication Token Simulation" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;keyHandle\&quot;:\&quot;${keyHandle}\&quot;,\&quot;sessionId\&quot;:\&quot;${sessionId}\&quot;,\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;
String origin = &quot;${origin}&quot;;
String TokenAuthResponse = FIDOU2FTokenSimulator.generateAuthenticationResponse(ChallengeJson,origin,10,true).toString();

vars.put(&quot;challengeresponse&quot;,TokenAuthResponse);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Authorization" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE - Preauthorization" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
	&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${testuser}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="KeyHandle Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">keyHandle</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;keyHandle&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preauthorization" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE - Authorization" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${auth_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1711515565">Successfully processed authorization response</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Authentication Token Simulation" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;keyHandle\&quot;:\&quot;${keyHandle}\&quot;,\&quot;sessionId\&quot;:\&quot;${sessionId}\&quot;,\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;
String origin = &quot;${origin}&quot;;
String TokenAuthzResponse = FIDOU2FTokenSimulator.generateAuthenticationResponse(ChallengeJson,origin,20,true).toString();

vars.put(&quot;challengeresponse&quot;,TokenAuthzResponse);

</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SKFE Negative Tests" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1449169611000</longProp>
        <longProp name="ThreadGroup.end_time">1449169611000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preregister - Input tests" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;abcd&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;65537&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input DID - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;120&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760747">&quot;Error&quot;:&quot;SKCE-ERR-1092:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input DID - Inactive" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;2&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760778">&quot;Error&quot;:&quot;SKCE-ERR-1093:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input svcusername - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input svcusername - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input svcusername - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;random-hacker&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input svcpassword - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input svcpassword - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input svcpassword - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;wrong-password&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input protocol - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input protocol - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input protocol - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;WRONG-FIDO_PROTOCOL&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2009981958">&quot;Error&quot;:&quot;FIDO-ERR-5002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input payload - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input payload - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input payload - Invalid - Json structure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598540">&quot;Error&quot;:&quot;FIDO-ERR-0014:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input payload - Invalid - Missing keys" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregister - Input payload - Invalid - Empty value" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
       &lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
       &lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="register - Input tests" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
      &lt;svcinfo&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
      &lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;abcd&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;65537&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input DID - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;120&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760747">&quot;Error&quot;:&quot;SKCE-ERR-1092:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input DID - Inactive" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;2&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input svcusername - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input svcusername - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input svcusername - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;wrong-hacker&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input svcpassword - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input svcpassword - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input svcpassword - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;wrong-password&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input payload - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599501">&quot;Error&quot;:&quot;FIDO-ERR-0004:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input payload - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599501">&quot;Error&quot;:&quot;FIDO-ERR-0004:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input payload - Invalid - Json structure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598540">&quot;Error&quot;:&quot;FIDO-ERR-0014:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input payload - Invalid - Missing keys; metadata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZmluaXNoRW5yb2xsbWVudCIsImNoYWxsZW5nZSI6IlVvQkowUW54RjJiRHFrdk5ZelNsMFFWQnZob3hPNnZnZTlBQ3BpclFDbGhnUkxrNi11dHBsNlhZaGFJamdsR0g2OTJYSUZTUV9ocHJKdnQySnZ3dUtrWXE1ZnNhQlZmOWNkN25NbjdYY0g2X0dVdnFFU21DZnZwRjhCd2dyQkJXeTZZM2piai1jYk53TXJLNWtPUklZNm9zN29LQmpxQm5POUFwTTJMU3lOZyIsIm9yaWdpbiI6Imh0dHBzOi8vZmlkby5zdHJvbmdhdXRoLmNvbTo4MTgxIiwiY2lkX3B1YmtleSI6Im5vdCBpbXBsZW1lbnRlZCB5ZXQifQ&quot;,
		&quot;sessionId&quot;: &quot;kH64SnuTQpK8b7zvkrrzsVn5dWdnO12F7c7t7TZOYJU=&quot;,
		&quot;registrationData&quot;: &quot;BQThIFosbo2AIVukcnsTnvxR31yUphCrFj3l4R--WKfnoVhDLqygsiaxD__yPJlyjl00FGK72Xsm69Dw9ot_nRK4sKkZY4KwByGEa564H6f1LwIJ0MlNLsJMOOBZbEuKbQKgVQmHiGQU39tolpXqaeHPkTl5hYuxamPoFomG9gTmtNFUB7DQzM5ZKzpgw3wKyHfOOPupsWow6J9fl_0JY_F2596rWBBL2lmuzCt3HJKpRJ9zSOU0ZK00bCZ0hTMmR8XBIvhL0YPOjEWlBgFTuXluzeDvCR5t6A1TrBsa62d7c4MjwTAgRs6SeVZwxVTFmrRlMIIB3DCCAYGgAwIBAgIEB6YU3zAMBggqhkjOPQQDAgUAMGMxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5TdHJvbmdBdXRoIEluYzEhMB8GA1UECxMYRm9yIERFVkVMT1BNRU5UIFVTRSBPTkxZMRgwFgYDVQQDDA9BdHRlc3RhdGlvbl9LZXkwHhcNMTQwNDE2MTgxMDI0WhcNMTQwNzE1MTgxMDI0WjBjMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOU3Ryb25nQXV0aCBJbmMxITAfBgNVBAsTGEZvciBERVZFTE9QTUVOVCBVU0UgT05MWTEYMBYGA1UEAwwPQXR0ZXN0YXRpb25fS2V5MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9gHgw7zO9_OH4I-MBFyxOwd95AZVqehsnYV9XyLjz5u4BvVN_KbM9QrtEqP5gl3-od_m4KSinkMYDJPamnpc-qMhMB8wHQYDVR0OBBYEFKQQeEO4m77i32v-Tbdcn07Clh4rMAwGCCqGSM49BAMCBQADRwAwRAIgdv_OKkt9zWc8z_8i-3mfAuHMrrfyStWT1qn4Rv2GdeUCIG0OV-Cqm5N2R9jp_WEbzM6WgE1k8QJkRwiDvr_ReESuMEYCIQDkMrHkKvw9UitEUHDSQ0sJ1wm67ndIX77HCIIQ0JKIMwIhAKtxqMJyt90wKsOAOEHACEnqxzjpesKRrCaW9YMBKkBr&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598478">&quot;Error&quot;:&quot;FIDO-ERR-0016:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input payload - Invalid - Missing keys; response" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;create_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599501">&quot;Error&quot;:&quot;FIDO-ERR-0004:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input payload - Invalid metadata; missing &apos;version&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;createlocation&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZmluaXNoRW5yb2xsbWVudCIsImNoYWxsZW5nZSI6IlVvQkowUW54RjJiRHFrdk5ZelNsMFFWQnZob3hPNnZnZTlBQ3BpclFDbGhnUkxrNi11dHBsNlhZaGFJamdsR0g2OTJYSUZTUV9ocHJKdnQySnZ3dUtrWXE1ZnNhQlZmOWNkN25NbjdYY0g2X0dVdnFFU21DZnZwRjhCd2dyQkJXeTZZM2piai1jYk53TXJLNWtPUklZNm9zN29LQmpxQm5POUFwTTJMU3lOZyIsIm9yaWdpbiI6Imh0dHBzOi8vZmlkby5zdHJvbmdhdXRoLmNvbTo4MTgxIiwiY2lkX3B1YmtleSI6Im5vdCBpbXBsZW1lbnRlZCB5ZXQifQ&quot;,
		&quot;sessionId&quot;: &quot;kH64SnuTQpK8b7zvkrrzsVn5dWdnO12F7c7t7TZOYJU=&quot;,
		&quot;registrationData&quot;: &quot;BQThIFosbo2AIVukcnsTnvxR31yUphCrFj3l4R--WKfnoVhDLqygsiaxD__yPJlyjl00FGK72Xsm69Dw9ot_nRK4sKkZY4KwByGEa564H6f1LwIJ0MlNLsJMOOBZbEuKbQKgVQmHiGQU39tolpXqaeHPkTl5hYuxamPoFomG9gTmtNFUB7DQzM5ZKzpgw3wKyHfOOPupsWow6J9fl_0JY_F2596rWBBL2lmuzCt3HJKpRJ9zSOU0ZK00bCZ0hTMmR8XBIvhL0YPOjEWlBgFTuXluzeDvCR5t6A1TrBsa62d7c4MjwTAgRs6SeVZwxVTFmrRlMIIB3DCCAYGgAwIBAgIEB6YU3zAMBggqhkjOPQQDAgUAMGMxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5TdHJvbmdBdXRoIEluYzEhMB8GA1UECxMYRm9yIERFVkVMT1BNRU5UIFVTRSBPTkxZMRgwFgYDVQQDDA9BdHRlc3RhdGlvbl9LZXkwHhcNMTQwNDE2MTgxMDI0WhcNMTQwNzE1MTgxMDI0WjBjMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOU3Ryb25nQXV0aCBJbmMxITAfBgNVBAsTGEZvciBERVZFTE9QTUVOVCBVU0UgT05MWTEYMBYGA1UEAwwPQXR0ZXN0YXRpb25fS2V5MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9gHgw7zO9_OH4I-MBFyxOwd95AZVqehsnYV9XyLjz5u4BvVN_KbM9QrtEqP5gl3-od_m4KSinkMYDJPamnpc-qMhMB8wHQYDVR0OBBYEFKQQeEO4m77i32v-Tbdcn07Clh4rMAwGCCqGSM49BAMCBQADRwAwRAIgdv_OKkt9zWc8z_8i-3mfAuHMrrfyStWT1qn4Rv2GdeUCIG0OV-Cqm5N2R9jp_WEbzM6WgE1k8QJkRwiDvr_ReESuMEYCIQDkMrHkKvw9UitEUHDSQ0sJ1wm67ndIX77HCIIQ0JKIMwIhAKtxqMJyt90wKsOAOEHACEnqxzjpesKRrCaW9YMBKkBr&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598416">&quot;Error&quot;:&quot;FIDO-ERR-0018:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input payload - Invalid metadata; missing &apos;create_location&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZmluaXNoRW5yb2xsbWVudCIsImNoYWxsZW5nZSI6IlVvQkowUW54RjJiRHFrdk5ZelNsMFFWQnZob3hPNnZnZTlBQ3BpclFDbGhnUkxrNi11dHBsNlhZaGFJamdsR0g2OTJYSUZTUV9ocHJKdnQySnZ3dUtrWXE1ZnNhQlZmOWNkN25NbjdYY0g2X0dVdnFFU21DZnZwRjhCd2dyQkJXeTZZM2piai1jYk53TXJLNWtPUklZNm9zN29LQmpxQm5POUFwTTJMU3lOZyIsIm9yaWdpbiI6Imh0dHBzOi8vZmlkby5zdHJvbmdhdXRoLmNvbTo4MTgxIiwiY2lkX3B1YmtleSI6Im5vdCBpbXBsZW1lbnRlZCB5ZXQifQ&quot;,
		&quot;sessionId&quot;: &quot;kH64SnuTQpK8b7zvkrrzsVn5dWdnO12F7c7t7TZOYJU=&quot;,
		&quot;registrationData&quot;: &quot;BQThIFosbo2AIVukcnsTnvxR31yUphCrFj3l4R--WKfnoVhDLqygsiaxD__yPJlyjl00FGK72Xsm69Dw9ot_nRK4sKkZY4KwByGEa564H6f1LwIJ0MlNLsJMOOBZbEuKbQKgVQmHiGQU39tolpXqaeHPkTl5hYuxamPoFomG9gTmtNFUB7DQzM5ZKzpgw3wKyHfOOPupsWow6J9fl_0JY_F2596rWBBL2lmuzCt3HJKpRJ9zSOU0ZK00bCZ0hTMmR8XBIvhL0YPOjEWlBgFTuXluzeDvCR5t6A1TrBsa62d7c4MjwTAgRs6SeVZwxVTFmrRlMIIB3DCCAYGgAwIBAgIEB6YU3zAMBggqhkjOPQQDAgUAMGMxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5TdHJvbmdBdXRoIEluYzEhMB8GA1UECxMYRm9yIERFVkVMT1BNRU5UIFVTRSBPTkxZMRgwFgYDVQQDDA9BdHRlc3RhdGlvbl9LZXkwHhcNMTQwNDE2MTgxMDI0WhcNMTQwNzE1MTgxMDI0WjBjMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOU3Ryb25nQXV0aCBJbmMxITAfBgNVBAsTGEZvciBERVZFTE9QTUVOVCBVU0UgT05MWTEYMBYGA1UEAwwPQXR0ZXN0YXRpb25fS2V5MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9gHgw7zO9_OH4I-MBFyxOwd95AZVqehsnYV9XyLjz5u4BvVN_KbM9QrtEqP5gl3-od_m4KSinkMYDJPamnpc-qMhMB8wHQYDVR0OBBYEFKQQeEO4m77i32v-Tbdcn07Clh4rMAwGCCqGSM49BAMCBQADRwAwRAIgdv_OKkt9zWc8z_8i-3mfAuHMrrfyStWT1qn4Rv2GdeUCIG0OV-Cqm5N2R9jp_WEbzM6WgE1k8QJkRwiDvr_ReESuMEYCIQDkMrHkKvw9UitEUHDSQ0sJ1wm67ndIX77HCIIQ0JKIMwIhAKtxqMJyt90wKsOAOEHACEnqxzjpesKRrCaW9YMBKkBr&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598416">&quot;Error&quot;:&quot;FIDO-ERR-0018:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input payload - Invalid response; missing &apos;clientData&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;create_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;sessionId&quot;: &quot;kH64SnuTQpK8b7zvkrrzsVn5dWdnO12F7c7t7TZOYJU=&quot;,
		&quot;registrationData&quot;: &quot;BQThIFosbo2AIVukcnsTnvxR31yUphCrFj3l4R--WKfnoVhDLqygsiaxD__yPJlyjl00FGK72Xsm69Dw9ot_nRK4sKkZY4KwByGEa564H6f1LwIJ0MlNLsJMOOBZbEuKbQKgVQmHiGQU39tolpXqaeHPkTl5hYuxamPoFomG9gTmtNFUB7DQzM5ZKzpgw3wKyHfOOPupsWow6J9fl_0JY_F2596rWBBL2lmuzCt3HJKpRJ9zSOU0ZK00bCZ0hTMmR8XBIvhL0YPOjEWlBgFTuXluzeDvCR5t6A1TrBsa62d7c4MjwTAgRs6SeVZwxVTFmrRlMIIB3DCCAYGgAwIBAgIEB6YU3zAMBggqhkjOPQQDAgUAMGMxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5TdHJvbmdBdXRoIEluYzEhMB8GA1UECxMYRm9yIERFVkVMT1BNRU5UIFVTRSBPTkxZMRgwFgYDVQQDDA9BdHRlc3RhdGlvbl9LZXkwHhcNMTQwNDE2MTgxMDI0WhcNMTQwNzE1MTgxMDI0WjBjMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOU3Ryb25nQXV0aCBJbmMxITAfBgNVBAsTGEZvciBERVZFTE9QTUVOVCBVU0UgT05MWTEYMBYGA1UEAwwPQXR0ZXN0YXRpb25fS2V5MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9gHgw7zO9_OH4I-MBFyxOwd95AZVqehsnYV9XyLjz5u4BvVN_KbM9QrtEqP5gl3-od_m4KSinkMYDJPamnpc-qMhMB8wHQYDVR0OBBYEFKQQeEO4m77i32v-Tbdcn07Clh4rMAwGCCqGSM49BAMCBQADRwAwRAIgdv_OKkt9zWc8z_8i-3mfAuHMrrfyStWT1qn4Rv2GdeUCIG0OV-Cqm5N2R9jp_WEbzM6WgE1k8QJkRwiDvr_ReESuMEYCIQDkMrHkKvw9UitEUHDSQ0sJ1wm67ndIX77HCIIQ0JKIMwIhAKtxqMJyt90wKsOAOEHACEnqxzjpesKRrCaW9YMBKkBr&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599470">&quot;Error&quot;:&quot;FIDO-ERR-0005:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input payload - Invalid response; missing &apos;sessionId&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;create_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZmluaXNoRW5yb2xsbWVudCIsImNoYWxsZW5nZSI6IlVvQkowUW54RjJiRHFrdk5ZelNsMFFWQnZob3hPNnZnZTlBQ3BpclFDbGhnUkxrNi11dHBsNlhZaGFJamdsR0g2OTJYSUZTUV9ocHJKdnQySnZ3dUtrWXE1ZnNhQlZmOWNkN25NbjdYY0g2X0dVdnFFU21DZnZwRjhCd2dyQkJXeTZZM2piai1jYk53TXJLNWtPUklZNm9zN29LQmpxQm5POUFwTTJMU3lOZyIsIm9yaWdpbiI6Imh0dHBzOi8vZmlkby5zdHJvbmdhdXRoLmNvbTo4MTgxIiwiY2lkX3B1YmtleSI6Im5vdCBpbXBsZW1lbnRlZCB5ZXQifQ&quot;,
		&quot;registrationData&quot;: &quot;BQThIFosbo2AIVukcnsTnvxR31yUphCrFj3l4R--WKfnoVhDLqygsiaxD__yPJlyjl00FGK72Xsm69Dw9ot_nRK4sKkZY4KwByGEa564H6f1LwIJ0MlNLsJMOOBZbEuKbQKgVQmHiGQU39tolpXqaeHPkTl5hYuxamPoFomG9gTmtNFUB7DQzM5ZKzpgw3wKyHfOOPupsWow6J9fl_0JY_F2596rWBBL2lmuzCt3HJKpRJ9zSOU0ZK00bCZ0hTMmR8XBIvhL0YPOjEWlBgFTuXluzeDvCR5t6A1TrBsa62d7c4MjwTAgRs6SeVZwxVTFmrRlMIIB3DCCAYGgAwIBAgIEB6YU3zAMBggqhkjOPQQDAgUAMGMxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5TdHJvbmdBdXRoIEluYzEhMB8GA1UECxMYRm9yIERFVkVMT1BNRU5UIFVTRSBPTkxZMRgwFgYDVQQDDA9BdHRlc3RhdGlvbl9LZXkwHhcNMTQwNDE2MTgxMDI0WhcNMTQwNzE1MTgxMDI0WjBjMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOU3Ryb25nQXV0aCBJbmMxITAfBgNVBAsTGEZvciBERVZFTE9QTUVOVCBVU0UgT05MWTEYMBYGA1UEAwwPQXR0ZXN0YXRpb25fS2V5MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9gHgw7zO9_OH4I-MBFyxOwd95AZVqehsnYV9XyLjz5u4BvVN_KbM9QrtEqP5gl3-od_m4KSinkMYDJPamnpc-qMhMB8wHQYDVR0OBBYEFKQQeEO4m77i32v-Tbdcn07Clh4rMAwGCCqGSM49BAMCBQADRwAwRAIgdv_OKkt9zWc8z_8i-3mfAuHMrrfyStWT1qn4Rv2GdeUCIG0OV-Cqm5N2R9jp_WEbzM6WgE1k8QJkRwiDvr_ReESuMEYCIQDkMrHkKvw9UitEUHDSQ0sJ1wm67ndIX77HCIIQ0JKIMwIhAKtxqMJyt90wKsOAOEHACEnqxzjpesKRrCaW9YMBKkBr&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599439">&quot;Error&quot;:&quot;FIDO-ERR-0006:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Register - Input payload - Invalid response; missing &apos;registrationData&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;vn&quot;: &quot;1.0&quot;,
		&quot;random_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZmluaXNoRW5yb2xsbWVudCIsImNoYWxsZW5nZSI6IlVvQkowUW54RjJiRHFrdk5ZelNsMFFWQnZob3hPNnZnZTlBQ3BpclFDbGhnUkxrNi11dHBsNlhZaGFJamdsR0g2OTJYSUZTUV9ocHJKdnQySnZ3dUtrWXE1ZnNhQlZmOWNkN25NbjdYY0g2X0dVdnFFU21DZnZwRjhCd2dyQkJXeTZZM2piai1jYk53TXJLNWtPUklZNm9zN29LQmpxQm5POUFwTTJMU3lOZyIsIm9yaWdpbiI6Imh0dHBzOi8vZmlkby5zdHJvbmdhdXRoLmNvbTo4MTgxIiwiY2lkX3B1YmtleSI6Im5vdCBpbXBsZW1lbnRlZCB5ZXQifQ&quot;,
		&quot;sessionId&quot;: &quot;kH64SnuTQpK8b7zvkrrzsVn5dWdnO12F7c7t7TZOYJU=&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599470">&quot;Error&quot;:&quot;FIDO-ERR-0005:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preauthenticate - Input tests" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;abcd&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;65537&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input DID - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;120&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760747">&quot;Error&quot;:&quot;SKCE-ERR-1092:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input DID - Inactive" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;2&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760778">&quot;Error&quot;:&quot;SKCE-ERR-1093:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input svcusername - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input svcusername - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input svcusername - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;random-hacker&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input svcpassword - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input svcpassword - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input svcpassword - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;wrong-password&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input protocol - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input protocol - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input protocol - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;WRONG-FIDO_PROTOCOL&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2009981958">&quot;Error&quot;:&quot;FIDO-ERR-5002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input payload - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input payload - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input payload - Invalid - Json structure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598540">&quot;Error&quot;:&quot;FIDO-ERR-0014:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input payload - Invalid - Missing keys" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthenticate - Input payload - Invalid - Empty value" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="authenticate - Input tests" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;abcd&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;65537&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input DID - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;120&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760747">&quot;Error&quot;:&quot;SKCE-ERR-1092:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input DID - Inactive" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;2&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input svcusername - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input svcusername - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input svcusername - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;wrong-hacker&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input svcpassword - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input svcpassword - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input svcpassword - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;wrong-password&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input payload - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598664">&quot;Error&quot;:&quot;FIDO-ERR-0010:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input payload - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598664">&quot;Error&quot;:&quot;FIDO-ERR-0010:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input payload - Invalid - Json structure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598540">&quot;Error&quot;:&quot;FIDO-ERR-0014:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input payload - Invalid - Missing keys; metadata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598447">&quot;Error&quot;:&quot;FIDO-ERR-0017:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input payload - Invalid - Missing keys; response" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598664">&quot;Error&quot;:&quot;FIDO-ERR-0010:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input payload - Invalid metadata; missing &apos;version&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598385">&quot;Error&quot;:&quot;FIDO-ERR-0019:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input payload - Invalid metadata; missing &apos;last_used_location&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598385">&quot;Error&quot;:&quot;FIDO-ERR-0019:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input payload - Invalid response; missing &apos;clientData&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598633">&quot;Error&quot;:&quot;FIDO-ERR-0011:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input payload - Invalid response; missing &apos;sessionId&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599439">&quot;Error&quot;:&quot;FIDO-ERR-0006:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input payload - Invalid response; missing &apos;keyHandle&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598633">&quot;Error&quot;:&quot;FIDO-ERR-0011:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authenticate - Input payload - Invalid response; missing &apos;signatureData&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598633">&quot;Error&quot;:&quot;FIDO-ERR-0011:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preauthorize - Input tests" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;abcd&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;65537&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input DID - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;120&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760747">&quot;Error&quot;:&quot;SKCE-ERR-1092:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input DID - Inactive" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;2&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760778">&quot;Error&quot;:&quot;SKCE-ERR-1093:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input svcusername - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input svcusername - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input svcusername - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;random-hacker&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input svcpassword - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input svcpassword - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input svcpassword - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;wrong-password&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input protocol - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input protocol - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input protocol - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;WRONG-FIDO_PROTOCOL&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2009981958">&quot;Error&quot;:&quot;FIDO-ERR-5002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input payload - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input payload - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input payload - Invalid - Json structure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598540">&quot;Error&quot;:&quot;FIDO-ERR-0014:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input payload - Invalid - Missing keys" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Input payload - Invalid - Empty value" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="authorize - Input tests" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;abcd&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;65537&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input DID - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;120&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760747">&quot;Error&quot;:&quot;SKCE-ERR-1092:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input DID - Inactive" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;2&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input svcusername - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input svcusername - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input svcusername - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;wrong-hacker&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input svcpassword - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input svcpassword - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input svcpassword - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;wrong-password&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input payload - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598664">&quot;Error&quot;:&quot;FIDO-ERR-0010:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input payload - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598664">&quot;Error&quot;:&quot;FIDO-ERR-0010:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input payload - Invalid - Json structure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598540">&quot;Error&quot;:&quot;FIDO-ERR-0014:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input payload - Invalid - Missing keys; metadata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598447">&quot;Error&quot;:&quot;FIDO-ERR-0017:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input payload - Invalid - Missing keys; response" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598664">&quot;Error&quot;:&quot;FIDO-ERR-0010:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input payload - Invalid metadata; missing &apos;version&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598385">&quot;Error&quot;:&quot;FIDO-ERR-0019:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input payload - Invalid metadata; missing &apos;last_used_location&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598385">&quot;Error&quot;:&quot;FIDO-ERR-0019:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input payload - Invalid response; missing &apos;clientData&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598633">&quot;Error&quot;:&quot;FIDO-ERR-0011:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input payload - Invalid response; missing &apos;sessionId&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599439">&quot;Error&quot;:&quot;FIDO-ERR-0006:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input payload - Invalid response; missing &apos;keyHandle&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;signatureData&quot;: &quot;AQAAAGQwRgIhAJpgCUt3eI--RanGl_gR22zudzdsNMGfhIMB_TGdZu3rAiEAond6EgJkT3d18xotDeBk0uRg41wkQssxTToWyIaG6SE&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598633">&quot;Error&quot;:&quot;FIDO-ERR-0011:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorize - Input payload - Invalid response; missing &apos;signatureData&apos;" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;last_used_location&quot;: &quot;Sunnyvale, CA&quot;
	},
	&quot;response&quot;: {
		&quot;clientData&quot;: &quot;eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiekJhUUhQZ1hsR21mMFNFVl82eXRmeUFUQ2s3M3gyZDVrZ2N3VmtLNmVUOFpJZlBDcnZpb0RkN2RzalBydWNCUHZDUjJEVzdoMWlEalh6SjdlZ3lVVms1V3pqRDk5TWxtVjlaU1dsVTAtZ2FLOG9RNUt1OUdWeVNQRFowVERQbmpvb1VybDc3UjRPZVJfb0tWdDBSNkIwN3dKWkcwci1CZzJwLWRnNGlTMlpZIiwib3JpZ2luIjoiaHR0cHM6Ly9maWRvLnN0cm9uZ2F1dGguY29tOjgxODEiLCJjaWRfcHVia2V5IjoiTk9UIElNUExFTUVOVEVEIFlFVCJ9&quot;,
		&quot;sessionId&quot;: &quot;OMZdMcnf8U/9QL+BZLW+ttu1Qv96SU++trqTuUxem2w=&quot;,
		&quot;keyHandle&quot;: &quot;FPvS1E1E_DPXVXUulgNdLBzG5BzzcEbaOTlIwFP1fRXwhGwtHdqOHvny_yjDpOCFh-vqdQ-NkfB47vpGHgrOz1yl1ncajVXcPxwiWBJZ7ydeO_TAiMg5yWXhBQT6RaitRtOMiNuKmt5DfnQn-wPPUkoUJkgApUN_kG64d4p6p7IsBCjodYxSzhNhpojhuN1LENRllN5B2gT2DLpootaGeOkb9UoXpRu60HYwLc9zyCo&quot;
	}
}&lt;/payload&gt;
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598633">&quot;Error&quot;:&quot;FIDO-ERR-0011:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getkeysinfo - Input tests" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;abcd&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;65537&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input DID - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;120&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760747">&quot;Error&quot;:&quot;SKCE-ERR-1092:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input DID - Inactive" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;2&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760778">&quot;Error&quot;:&quot;SKCE-ERR-1093:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input svcusername - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input svcusername - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input svcusername - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;random-hacker&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input svcpassword - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input svcpassword - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input svcpassword - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;wrong-password&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input protocol - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input protocol - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input protocol - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;WRONG-FIDO_PROTOCOL&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2009981958">&quot;Error&quot;:&quot;FIDO-ERR-5002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input payload - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input payload - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input payload - Invalid - Json structure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598540">&quot;Error&quot;:&quot;FIDO-ERR-0014:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input payload - Invalid - Missing keys" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Getkeysinfo - Input payload - Invalid - Empty value" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:getkeysinfo&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;&quot;}&lt;/payload&gt; 
      &lt;/soap:getkeysinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="deactivate - Input tests" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1884651265">&quot;Error&quot;:&quot;SKCE-ERR-1003: </stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;abcd&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;65537&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77752129">&quot;Error&quot;:&quot;SKCE-ERR-1003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input DID - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;120&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760747">&quot;Error&quot;:&quot;SKCE-ERR-1092:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input DID - Inactive" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;2&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77760778">&quot;Error&quot;:&quot;SKCE-ERR-1093:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input svcusername - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input svcusername - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input svcusername - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;random-hacker&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input svcpassword - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input svcpassword - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input svcpassword - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;wrong-password&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599532">&quot;Error&quot;:&quot;FIDO-ERR-0003:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input protocol - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input protocol - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input protocol - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;WRONG-FIDO_PROTOCOL&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2009981958">&quot;Error&quot;:&quot;FIDO-ERR-5002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input payload - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input payload - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014599563">&quot;Error&quot;:&quot;FIDO-ERR-0002:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input payload - Invalid - Json structure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598540">&quot;Error&quot;:&quot;FIDO-ERR-0014:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input payload - Invalid - Missing keys; request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014597672">&quot;Error&quot;:&quot;FIDO-ERR-0021:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input payload - Invalid - Missing keys; metadata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598385">&quot;Error&quot;:&quot;FIDO-ERR-0019:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input payload - Invalid - Non-registered user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;non-registered-user&quot;,
		&quot;randomid&quot;: &quot;57a0583f-3270-40d6-8117-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598385">&quot;Error&quot;:&quot;FIDO-ERR-0019:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Deactivate - Input payload - Invalid - Incorrect randomid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:deactivate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{
	&quot;request&quot;: {
		&quot;username&quot;: &quot;${skfe-testusername}&quot;,
		&quot;randomid&quot;: &quot;57a0583f-WRONG-4e2c95ec3f69&quot;
	},
	&quot;metadata&quot;: {
		&quot;version&quot;: &quot;1.0&quot;,
		&quot;modify_location&quot;: &quot;Sunnyvale, CA&quot;
	}
}&lt;/payload&gt; 
      &lt;/soap:deactivate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2014598385">&quot;Error&quot;:&quot;FIDO-ERR-0019:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Registration - Expired session" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregistration - Expired user session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${testuser}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1145792675">testuser</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1807926422">
                  <stringProp name="-566583462">testuser_${__Random(1,1000000)}${__Random(1,1000000)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preregistration" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer - Sleep for 35 seconds" enabled="true">
              <stringProp name="ConstantTimer.delay">35000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Registration - Expired user session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${reg_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt; </stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2014599439">&quot;Error&quot;:&quot;FIDO-ERR-0006:</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Registration Token Simulation" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;
String SessionID = &quot;${sessionId}&quot;;
String origin = &quot;${origin}&quot;;
String TokenResponse = FIDOU2FTokenSimulator.generateRegistrationResponse(ChallengeJson,origin,SessionID,true).toString();

vars.put(&quot;challengeresponse&quot;,TokenResponse);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Registration - Bad signature" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregistration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${testuser}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1145792675">testuser</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1807926422">
                  <stringProp name="-566583462">testuser_${__Random(1,1000000)}${__Random(1,1000000)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preregistration" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Registration - Bad signature" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${reg_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt; </stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-724605071">&quot;Error&quot;:&quot;Failed to process registration response&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Registration Token Simulation" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;
String SessionID = &quot;${sessionId}&quot;;
String origin = &quot;${origin}&quot;;

String TokenResponse = FIDOU2FTokenSimulator.generateRegistrationResponse(ChallengeJson,origin,SessionID,false).toString();

vars.put(&quot;challengeresponse&quot;,TokenResponse);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Registration - Manipulated parameter; &apos;challenge&apos; " enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregistration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${testuser}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1145792675">testuser</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1807926422">
                  <stringProp name="-566583462">testuser_${__Random(1,1000000)}${__Random(1,1000000)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preregistration" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Registration - Manipulated parameter; &apos;challenge&apos; " enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${reg_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt; </stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2014599439">&quot;Error&quot;:&quot;FIDO-ERR-0006:</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Registration Token Simulation" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;challenge\&quot;:\&quot;manipulated-challenge\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;
String SessionID = &quot;${sessionId}&quot;;
String origin = &quot;${origin}&quot;;
String TokenResponse = FIDOU2FTokenSimulator.generateRegistrationResponse(ChallengeJson,origin,SessionID,true).toString();

vars.put(&quot;challengeresponse&quot;,TokenResponse);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Registration - Manipulated parameter; &apos;version&apos; " enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregistration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${testuser}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1145792675">testuser</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1807926422">
                  <stringProp name="-566583462">testuser_${__Random(1,1000000)}${__Random(1,1000000)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preregistration" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Registration - Manipulated parameter; &apos;version&apos; " enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${reg_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt; </stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Registration Token Simulation" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;manipulated-version\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;
String SessionID = &quot;${sessionId}&quot;;
String origin = &quot;${origin}&quot;;
String TokenResponse = FIDOU2FTokenSimulator.generateRegistrationResponse(ChallengeJson,origin,SessionID,true).toString();

vars.put(&quot;challengeresponse&quot;,TokenResponse);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Registration - Manipulated parameter; &apos;appId&apos;      " enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preregistration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preregister&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${testuser}&quot;}&lt;/payload&gt; 
      &lt;/soap:preregister&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1145792675">testuser</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1807926422">
                  <stringProp name="-566583462">testuser_${__Random(1,1000000)}${__Random(1,1000000)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preregistration" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Registration - Manipulated parameter; &apos;appId&apos; " enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:register&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${reg_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:register&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt; </stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-724605071">&quot;Error&quot;:&quot;Failed to process registration response&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Registration Token Simulation" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;manipulated-version\&quot;,\&quot;appId\&quot;:\&quot;manipulated-appid\&quot;}&quot;;
String SessionID = &quot;${sessionId}&quot;;
String origin = &quot;${origin}&quot;;
String TokenResponse = FIDOU2FTokenSimulator.generateRegistrationResponse(ChallengeJson,origin,&quot;random-session-id&quot;,true).toString();

vars.put(&quot;challengeresponse&quot;,TokenResponse);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Authentication - Expired session" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthentication - Expired user session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;

         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="KeyHandle Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">keyHandle</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;keyHandle&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preauthentication" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer - Sleep for 35 seconds" enabled="true">
              <stringProp name="ConstantTimer.delay">35000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authentication - Expired user session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${auth_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2014599439">&quot;Error&quot;:&quot;FIDO-ERR-0006:</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Authentication Token Simulation" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;keyHandle\&quot;:\&quot;${keyHandle}\&quot;,\&quot;sessionId\&quot;:\&quot;${sessionId}\&quot;,\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;
String origin = &quot;${origin}&quot;;
String TokenResponse = FIDOU2FTokenSimulator.generateAuthenticationResponse(ChallengeJson,origin,30,true).toString();

vars.put(&quot;challengeresponse&quot;,TokenResponse);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Authentication - Manipulated parameter: &apos;challenge&apos;" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthentication" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="KeyHandle Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">keyHandle</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;keyHandle&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preauthentication" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authentication - Manipulated parameter: &apos;challenge&apos;" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${auth_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2014599439">&quot;Error&quot;:&quot;FIDO-ERR-0006:</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Authentication Token Simulation" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;keyHandle\&quot;:\&quot;${keyHandle}\&quot;,\&quot;sessionId\&quot;:\&quot;${sessionId}\&quot;,\&quot;challenge\&quot;:\&quot;manipulated-challenge\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;

String origin = &quot;${origin}&quot;;
String TokenAuthResponse = FIDOU2FTokenSimulator.generateAuthenticationResponse(ChallengeJson,origin,10,true).toString();

vars.put(&quot;challengeresponse&quot;,TokenAuthResponse);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Authentication - Bad signature" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthentication" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="KeyHandle Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">keyHandle</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;keyHandle&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preauthentication" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authentication - Bad signature" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authenticate&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${auth_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2014598509">&quot;Error&quot;:&quot;FIDO-ERR-0015:</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Authentication Token Simulation" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;keyHandle\&quot;:\&quot;${keyHandle}\&quot;,\&quot;sessionId\&quot;:\&quot;${sessionId}\&quot;,\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;

String origin = &quot;${origin}&quot;;
String TokenAuthResponse = FIDOU2FTokenSimulator.generateAuthenticationResponse(ChallengeJson,origin,10,false).toString();

vars.put(&quot;challengeresponse&quot;,TokenAuthResponse);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Authorization - Expired session" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize - Expired user session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="KeyHandle Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">keyHandle</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;keyHandle&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preauthorize" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer - Sleep for 35 seconds" enabled="true">
              <stringProp name="ConstantTimer.delay">35000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorization - Expired user session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${auth_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2014599439">&quot;Error&quot;:&quot;FIDO-ERR-0006:</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Authentication Token Simulation" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;keyHandle\&quot;:\&quot;${keyHandle}\&quot;,\&quot;sessionId\&quot;:\&quot;${sessionId}\&quot;,\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;

String origin = &quot;${origin}&quot;;
String TokenAuthResponse = FIDOU2FTokenSimulator.generateAuthenticationResponse(ChallengeJson,origin,10,true).toString();

vars.put(&quot;challengeresponse&quot;,TokenAuthResponse);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Authorization - Bad signature" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Preauthorize" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:preauthorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
         &lt;protocol&gt;${skfe-fiodprotocol}&lt;/protocol&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;username&quot;:&quot;${skfe-testusername}&quot;}&lt;/payload&gt; 
      &lt;/soap:preauthorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-54524258">&quot;Error&quot;:&quot;&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="KeyHandle Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">keyHandle</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;keyHandle&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SessionId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Challenge Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">challenge</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;challenge&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Version Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">version</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;version&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AppId Regex Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">appId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appId&quot;:&quot;([^&quot;]+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Successful Preauthorize" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SKFE Authorization - Bad signature" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/skfe/soap?wsdl</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:soap=&quot;http://soap.u2f.skfews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;soap:authorize&gt;
&lt;svcinfo&gt;
         &lt;did&gt;${skfe-did}&lt;/did&gt;
         &lt;svcusername&gt;${skfe-serviceuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${skfe-serviceuserpwd}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;payload&gt;{&quot;metadata&quot;:${auth_metadata},&quot;response&quot;:${challengeresponse}}&lt;/payload&gt; 
      &lt;/soap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2014598509">&quot;Error&quot;:&quot;FIDO-ERR-0015:</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Authentication Token Simulation" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.strongauth.skce.fidoengine.soapclient.FIDOU2FTokenSimulator;

String ChallengeJson = &quot;{\&quot;keyHandle\&quot;:\&quot;${keyHandle}\&quot;,\&quot;sessionId\&quot;:\&quot;${sessionId}\&quot;,\&quot;challenge\&quot;:\&quot;${challenge}\&quot;,\&quot;version\&quot;:\&quot;${version}\&quot;,\&quot;appId\&quot;:\&quot;${appId}\&quot;}&quot;;

String origin = &quot;${origin}&quot;;
String TokenAuthResponse = FIDOU2FTokenSimulator.generateAuthenticationResponse(ChallengeJson,origin,10,false).toString();

vars.put(&quot;challengeresponse&quot;,TokenAuthResponse);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="LDAPE Positive Tests" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1418425684000</longProp>
        <longProp name="ThreadGroup.end_time">1418425684000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="authenticate" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-322922593">&quot;auth_status&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="authorize" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getuserinfo" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="77914613">{&quot;username&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="updateuser" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1986341530">Successfully updated ldap user</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="LDAPE Negative Tests" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1418425684000</longProp>
        <longProp name="ThreadGroup.end_time">1418425684000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="authenticate" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;/svcinfo&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;&lt;/did&gt;
&lt;/svcinfo&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;abcd&lt;/did&gt;
&lt;/svcinfo&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;65537&lt;/did&gt;
&lt;/svcinfo&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831036">SKCEWS-ERR-3000</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid DID - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;125&lt;/did&gt;
&lt;/svcinfo&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259533">SKCE-ERR-1092</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid username - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid username - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid username - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;notauser&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-773815946">{&quot;auth_status&quot;:&quot;false&quot;}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid username - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${testusername_too_long}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-773815946">{&quot;auth_status&quot;:&quot;false&quot;}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid username - Special Characters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${testusername_special_characters}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1843815064">com.ctc.wstx.exc.WstxLazyException</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid password - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid password - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authenticate - Invalid password - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authenticate&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;wavq34y56k76rk7t3f2yfgwgw&lt;/password&gt;
      &lt;/ldap:authenticate&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authenticate</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-773815946">{&quot;auth_status&quot;:&quot;false&quot;}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="authorize" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;&lt;/did&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;abcd&lt;/did&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;65537&lt;/did&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831036">SKCEWS-ERR-3000</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid DID - Non Exsistant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;125&lt;/did&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259533">SKCE-ERR-1092</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid username - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid username - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid username - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;random-user-not-in-system&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid username - Special Characters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${testusername_special_characters}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1843815064">com.ctc.wstx.exc.WstxLazyException</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid password - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid password - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;wavq34y56k76rk7t3f2yfgwgw&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid password - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;wavq34y56k76rk7t3f2yfgwgw&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid operation - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;ENC&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid operation - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE Authorize - Invalid operation - Invalid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:authorize&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
&lt;/svcinfo&gt;
         &lt;username&gt;${Svcuser}&lt;/username&gt;
         &lt;password&gt;${Svcpassword}&lt;/password&gt;
         &lt;operation&gt;WHAT-OPERATION-IS-THIS&lt;/operation&gt;
      &lt;/ldap:authorize&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">authorize</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-773815946">{&quot;auth_status&quot;:&quot;false&quot;}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getuserinfo" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid DID - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;abcd&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;65537&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831036">SKCEWS-ERR-3000</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid DID - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;125&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259533">SKCE-ERR-1092</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid svcusername - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid svcusername - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid svcusername - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;random-user-not-in-system&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid svcusername - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${testusername_too_long}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid svcusername - Special Characters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${testusername_special_characters}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1843815064">com.ctc.wstx.exc.WstxLazyException</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid svcpassword - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid svcpassword - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid svcpassword - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;qwertuy123m12397698123xczzxc&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid username - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid username - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid username - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;random-user-not-in-system&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831076">SKCEWS-ERR-3019</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid username - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${testusername_too_long}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831076">SKCEWS-ERR-3019</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE GetUserInfo - Invalid username - Special Characters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:getuserinfo&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${testusername_special_characters}&lt;/username&gt;
      &lt;/ldap:getuserinfo&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">getuserinfo</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1843815064">com.ctc.wstx.exc.WstxLazyException</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="updateuser" enabled="true"/>
        <hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid DID - Null" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid DID - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid DID - Nonnumeric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;abcd&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259811">SKCE-ERR-1003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid DID - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;65537&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831036">SKCEWS-ERR-3000</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid DID - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;125&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-182259533">SKCE-ERR-1092</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid svcusername - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid svcusername - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid svcusername - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;wrong-svc-user&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid svcusername - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${testusername_too_long}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid svcusername - Special Characters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${testusername_special_characters}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1843815064">com.ctc.wstx.exc.WstxLazyException</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid svcpassword - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid svcpassword - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid svcpassword - Incorrect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;wrong-password&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717831196">SKCEWS-ERR-3055</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid username - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid username - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid username - Non Existant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;random-user-not-in-system&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-388302262">FIDO-ERR-0036</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid username - Too Long" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${testusername_too_long}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-388302262">FIDO-ERR-0036</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid key - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid key - Empty" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid key - Invalid" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;invalid-key&lt;/key&gt;
         &lt;value&gt;${test_ldap_attribute_value}&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1190551886">javax.naming.directory.SchemaViolationException: [LDAP: error code 65</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid value - Null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="717979994">SKCEWS-ERR-8003</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="LDAPE UpdateUser - Invalid value - Empty" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">https://${SKCE01}/ldape/LDAPEServlet?wsdl</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ldap=&quot;http://ldapews.strongauth.com/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ldap:updateuser&gt;
&lt;svcinfo&gt;
&lt;did&gt;${skfe-did}&lt;/did&gt; 
         &lt;svcusername&gt;${Svcuser}&lt;/svcusername&gt;
         &lt;svcpassword&gt;${Svcpassword}&lt;/svcpassword&gt;
&lt;/svcinfo&gt;
         &lt;username&gt;${User3}&lt;/username&gt;
         &lt;key&gt;${test_ldap_attribute_key}&lt;/key&gt;
         &lt;value&gt;&lt;/value&gt;
         &lt;deletion&gt;false&lt;/deletion&gt;
      &lt;/ldap:updateuser&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">updateuser</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2073623658">javax.naming.directory.InvalidAttributeValueException: [LDAP: error code 21</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree - Positive" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="ResultCollector.success_only_logging">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree - Negative" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration" reference="../../../ResultCollector/objProp[2]/value"/>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
