
package com.strongauth.skee.soapstubs;

import javax.activation.DataHandler;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SKEEServlet", targetNamespace = "http://skeews.strongauth.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SKEEServlet {


    /**
     * 
     * @param svcinfo
     * @param encinfo
     * @param fileinfo
     * @param filedata
     * @param authzinfo
     * @param storageinfo
     * @return
     *     returns com.strongauth.skee.soapstubs.SkceReturnObject
     * @throws SKCEException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "encryptToCloud", targetNamespace = "http://skeews.strongauth.com/", className = "com.strongauth.skee.soapstubs.EncryptToCloud")
    @ResponseWrapper(localName = "encryptToCloudResponse", targetNamespace = "http://skeews.strongauth.com/", className = "com.strongauth.skee.soapstubs.EncryptToCloudResponse")
    @Action(input = "http://skeews.strongauth.com/SKEEServlet/encryptToCloudRequest", output = "http://skeews.strongauth.com/SKEEServlet/encryptToCloudResponse", fault = {
        @FaultAction(className = SKCEException_Exception.class, value = "http://skeews.strongauth.com/SKEEServlet/encryptToCloud/Fault/SKCEException")
    })
    public SkceReturnObject encryptToCloud(
        @WebParam(name = "svcinfo", targetNamespace = "")
        SKCEServiceInfoType svcinfo,
        @WebParam(name = "fileinfo", targetNamespace = "")
        SKCEInputFileInfoType fileinfo,
        @WebParam(name = "filedata", targetNamespace = "")
        DataHandler filedata,
        @WebParam(name = "encinfo", targetNamespace = "")
        SKCEEncryptionKeyInfoType encinfo,
        @WebParam(name = "authzinfo", targetNamespace = "")
        SKCEAuthorizationInfoType authzinfo,
        @WebParam(name = "storageinfo", targetNamespace = "")
        SKCEStorageInfoType storageinfo)
        throws SKCEException_Exception
    ;

    /**
     * 
     * @param svcinfo
     * @return
     *     returns com.strongauth.skee.soapstubs.SkceReturnObject
     * @throws SKCEException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ping", targetNamespace = "http://skeews.strongauth.com/", className = "com.strongauth.skee.soapstubs.Ping")
    @ResponseWrapper(localName = "pingResponse", targetNamespace = "http://skeews.strongauth.com/", className = "com.strongauth.skee.soapstubs.PingResponse")
    @Action(input = "http://skeews.strongauth.com/SKEEServlet/pingRequest", output = "http://skeews.strongauth.com/SKEEServlet/pingResponse", fault = {
        @FaultAction(className = SKCEException_Exception.class, value = "http://skeews.strongauth.com/SKEEServlet/ping/Fault/SKCEException")
    })
    public SkceReturnObject ping(
        @WebParam(name = "svcinfo", targetNamespace = "")
        SKCEServiceInfoType svcinfo)
        throws SKCEException_Exception
    ;

    /**
     * 
     * @param svcinfo
     * @param fileinfo
     * @param authzinfo
     * @param storageinfo
     * @return
     *     returns com.strongauth.skee.soapstubs.SkceReturnObject
     * @throws SKCEException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "decryptFromCloud", targetNamespace = "http://skeews.strongauth.com/", className = "com.strongauth.skee.soapstubs.DecryptFromCloud")
    @ResponseWrapper(localName = "decryptFromCloudResponse", targetNamespace = "http://skeews.strongauth.com/", className = "com.strongauth.skee.soapstubs.DecryptFromCloudResponse")
    @Action(input = "http://skeews.strongauth.com/SKEEServlet/decryptFromCloudRequest", output = "http://skeews.strongauth.com/SKEEServlet/decryptFromCloudResponse", fault = {
        @FaultAction(className = SKCEException_Exception.class, value = "http://skeews.strongauth.com/SKEEServlet/decryptFromCloud/Fault/SKCEException")
    })
    public SkceReturnObject decryptFromCloud(
        @WebParam(name = "svcinfo", targetNamespace = "")
        SKCEServiceInfoType svcinfo,
        @WebParam(name = "fileinfo", targetNamespace = "")
        SKCEInputFileInfoType fileinfo,
        @WebParam(name = "authzinfo", targetNamespace = "")
        SKCEAuthorizationInfoType authzinfo,
        @WebParam(name = "storageinfo", targetNamespace = "")
        SKCEStorageInfoType storageinfo)
        throws SKCEException_Exception
    ;

    /**
     * 
     * @param svcinfo
     * @param encinfo
     * @param fileinfo
     * @param filedata
     * @param authzinfo
     * @return
     *     returns com.strongauth.skee.soapstubs.SkceReturnObject
     * @throws SKCEException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "encrypt", targetNamespace = "http://skeews.strongauth.com/", className = "com.strongauth.skee.soapstubs.Encrypt")
    @ResponseWrapper(localName = "encryptResponse", targetNamespace = "http://skeews.strongauth.com/", className = "com.strongauth.skee.soapstubs.EncryptResponse")
    @Action(input = "http://skeews.strongauth.com/SKEEServlet/encryptRequest", output = "http://skeews.strongauth.com/SKEEServlet/encryptResponse", fault = {
        @FaultAction(className = SKCEException_Exception.class, value = "http://skeews.strongauth.com/SKEEServlet/encrypt/Fault/SKCEException")
    })
    public SkceReturnObject encrypt(
        @WebParam(name = "svcinfo", targetNamespace = "")
        SKCEServiceInfoType svcinfo,
        @WebParam(name = "fileinfo", targetNamespace = "")
        SKCEInputFileInfoType fileinfo,
        @WebParam(name = "filedata", targetNamespace = "")
        DataHandler filedata,
        @WebParam(name = "encinfo", targetNamespace = "")
        SKCEEncryptionKeyInfoType encinfo,
        @WebParam(name = "authzinfo", targetNamespace = "")
        SKCEAuthorizationInfoType authzinfo)
        throws SKCEException_Exception
    ;

    /**
     * 
     * @param svcinfo
     * @param fileinfo
     * @param filedata
     * @param authzinfo
     * @return
     *     returns com.strongauth.skee.soapstubs.SkceReturnObject
     * @throws SKCEException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "decrypt", targetNamespace = "http://skeews.strongauth.com/", className = "com.strongauth.skee.soapstubs.Decrypt")
    @ResponseWrapper(localName = "decryptResponse", targetNamespace = "http://skeews.strongauth.com/", className = "com.strongauth.skee.soapstubs.DecryptResponse")
    @Action(input = "http://skeews.strongauth.com/SKEEServlet/decryptRequest", output = "http://skeews.strongauth.com/SKEEServlet/decryptResponse", fault = {
        @FaultAction(className = SKCEException_Exception.class, value = "http://skeews.strongauth.com/SKEEServlet/decrypt/Fault/SKCEException")
    })
    public SkceReturnObject decrypt(
        @WebParam(name = "svcinfo", targetNamespace = "")
        SKCEServiceInfoType svcinfo,
        @WebParam(name = "fileinfo", targetNamespace = "")
        SKCEInputFileInfoType fileinfo,
        @WebParam(name = "filedata", targetNamespace = "")
        DataHandler filedata,
        @WebParam(name = "authzinfo", targetNamespace = "")
        SKCEAuthorizationInfoType authzinfo)
        throws SKCEException_Exception
    ;

}
