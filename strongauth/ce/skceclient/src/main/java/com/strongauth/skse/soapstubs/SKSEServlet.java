
package com.strongauth.skse.soapstubs;

import javax.activation.DataHandler;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SKSEServlet", targetNamespace = "http://sksews.strongauth.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SKSEServlet {


    /**
     * 
     * @param input
     * @param svcinfo
     * @param keyid
     * @param signtype
     * @param documentid
     * @param token
     * @return
     *     returns com.strongauth.skse.soapstubs.SkceReturnObject
     * @throws SKCEException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "signxml", targetNamespace = "http://sksews.strongauth.com/", className = "com.strongauth.skse.soapstubs.Signxml")
    @ResponseWrapper(localName = "signxmlResponse", targetNamespace = "http://sksews.strongauth.com/", className = "com.strongauth.skse.soapstubs.SignxmlResponse")
    @Action(input = "http://sksews.strongauth.com/SKSEServlet/signxmlRequest", output = "http://sksews.strongauth.com/SKSEServlet/signxmlResponse", fault = {
        @FaultAction(className = SKCEException_Exception.class, value = "http://sksews.strongauth.com/SKSEServlet/signxml/Fault/SKCEException")
    })
    public SkceReturnObject signxml(
        @WebParam(name = "svcinfo", targetNamespace = "")
        SKCEServiceInfoType svcinfo,
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "keyid", targetNamespace = "")
        String keyid,
        @WebParam(name = "documentid", targetNamespace = "")
        String documentid,
        @WebParam(name = "signtype", targetNamespace = "")
        Integer signtype,
        @WebParam(name = "input", targetNamespace = "")
        String input)
        throws SKCEException_Exception
    ;

    /**
     * 
     * @param input
     * @param svcinfo
     * @param signature
     * @param signtype
     * @return
     *     returns com.strongauth.skse.soapstubs.SkceReturnObject
     * @throws SKCEException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verifyxml", targetNamespace = "http://sksews.strongauth.com/", className = "com.strongauth.skse.soapstubs.Verifyxml")
    @ResponseWrapper(localName = "verifyxmlResponse", targetNamespace = "http://sksews.strongauth.com/", className = "com.strongauth.skse.soapstubs.VerifyxmlResponse")
    @Action(input = "http://sksews.strongauth.com/SKSEServlet/verifyxmlRequest", output = "http://sksews.strongauth.com/SKSEServlet/verifyxmlResponse", fault = {
        @FaultAction(className = SKCEException_Exception.class, value = "http://sksews.strongauth.com/SKSEServlet/verifyxml/Fault/SKCEException")
    })
    public SkceReturnObject verifyxml(
        @WebParam(name = "svcinfo", targetNamespace = "")
        SKCEServiceInfoType svcinfo,
        @WebParam(name = "signtype", targetNamespace = "")
        Integer signtype,
        @WebParam(name = "input", targetNamespace = "")
        String input,
        @WebParam(name = "signature", targetNamespace = "")
        String signature)
        throws SKCEException_Exception
    ;

    /**
     * 
     * @param svcinfo
     * @param data
     * @param keystoretype
     * @param digesttype
     * @param signaturetype
     * @param csainput
     * @return
     *     returns com.strongauth.skse.soapstubs.SkceReturnObject
     * @throws SKCEException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sign", targetNamespace = "http://sksews.strongauth.com/", className = "com.strongauth.skse.soapstubs.Sign")
    @ResponseWrapper(localName = "signResponse", targetNamespace = "http://sksews.strongauth.com/", className = "com.strongauth.skse.soapstubs.SignResponse")
    @Action(input = "http://sksews.strongauth.com/SKSEServlet/signRequest", output = "http://sksews.strongauth.com/SKSEServlet/signResponse", fault = {
        @FaultAction(className = SKCEException_Exception.class, value = "http://sksews.strongauth.com/SKSEServlet/sign/Fault/SKCEException")
    })
    public SkceReturnObject sign(
        @WebParam(name = "svcinfo", targetNamespace = "")
        SKCEServiceInfoType svcinfo,
        @WebParam(name = "keystoretype", targetNamespace = "")
        String keystoretype,
        @WebParam(name = "data", targetNamespace = "")
        DataHandler data,
        @WebParam(name = "signaturetype", targetNamespace = "")
        String signaturetype,
        @WebParam(name = "digesttype", targetNamespace = "")
        String digesttype,
        @WebParam(name = "csainput", targetNamespace = "")
        String csainput)
        throws SKCEException_Exception
    ;

    /**
     * 
     * @param svcinfo
     * @param keystoretype
     * @param csainput
     * @return
     *     returns com.strongauth.skse.soapstubs.SkceReturnObject
     * @throws SKCEException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeKey", targetNamespace = "http://sksews.strongauth.com/", className = "com.strongauth.skse.soapstubs.RemoveKey")
    @ResponseWrapper(localName = "removeKeyResponse", targetNamespace = "http://sksews.strongauth.com/", className = "com.strongauth.skse.soapstubs.RemoveKeyResponse")
    @Action(input = "http://sksews.strongauth.com/SKSEServlet/removeKeyRequest", output = "http://sksews.strongauth.com/SKSEServlet/removeKeyResponse", fault = {
        @FaultAction(className = SKCEException_Exception.class, value = "http://sksews.strongauth.com/SKSEServlet/removeKey/Fault/SKCEException")
    })
    public SkceReturnObject removeKey(
        @WebParam(name = "svcinfo", targetNamespace = "")
        SKCEServiceInfoType svcinfo,
        @WebParam(name = "keystoretype", targetNamespace = "")
        String keystoretype,
        @WebParam(name = "csainput", targetNamespace = "")
        String csainput)
        throws SKCEException_Exception
    ;

    /**
     * 
     * @param svcinfo
     * @param keystoretype
     * @param csainput
     * @return
     *     returns com.strongauth.skse.soapstubs.SkceReturnObject
     * @throws SKCEException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loadKey", targetNamespace = "http://sksews.strongauth.com/", className = "com.strongauth.skse.soapstubs.LoadKey")
    @ResponseWrapper(localName = "loadKeyResponse", targetNamespace = "http://sksews.strongauth.com/", className = "com.strongauth.skse.soapstubs.LoadKeyResponse")
    @Action(input = "http://sksews.strongauth.com/SKSEServlet/loadKeyRequest", output = "http://sksews.strongauth.com/SKSEServlet/loadKeyResponse", fault = {
        @FaultAction(className = SKCEException_Exception.class, value = "http://sksews.strongauth.com/SKSEServlet/loadKey/Fault/SKCEException")
    })
    public SkceReturnObject loadKey(
        @WebParam(name = "svcinfo", targetNamespace = "")
        SKCEServiceInfoType svcinfo,
        @WebParam(name = "keystoretype", targetNamespace = "")
        String keystoretype,
        @WebParam(name = "csainput", targetNamespace = "")
        String csainput)
        throws SKCEException_Exception
    ;

}
